using System;
using System.IO;
using System.Text;

class Program
{
    static void Main(string[] args)
    {
        string filePath = "path/to/your/file.csv"; // Make sure to update this path.
        string content = ProcessCsvFile(filePath);
        Console.WriteLine(content);
    }

    static string ProcessCsvFile(string filePath)
    {
        var sbContent = new StringBuilder();
        bool isHeaderFound = false;
        bool isEmptyLine = true;

        using (var fileText = File.OpenText(filePath))
        {
            while (!fileText.EndOfStream)
            {
                var line = fileText.ReadLine();
                
                // Check if the line is a header or content line.
                // A line is considered empty if it matches exactly '""'
                if (!string.IsNullOrWhiteSpace(line) && !line.Equals("\"\",\"\""))
                {
                    isEmptyLine = false;
                    if (line.StartsWith("\"LID\""))
                    {
                        // If a header is found and it is not the first, reset the content to start from this header.
                        if (isHeaderFound)
                        {
                            sbContent.Clear(); // Clears the previous content if a new header is found
                        }
                        isHeaderFound = true;
                    }
                }
                else
                {
                    isEmptyLine = true; // Mark as empty line for skipping
                }

                // If the line is not empty or it's a header line, add it to the content.
                if (isHeaderFound && !isEmptyLine)
                {
                    sbContent.AppendLine(line);
                }
            }
        }


private static string IngestCsvFileWithoutSpecificHeader(string filePath, string headerToSkip)
        {
            var sbContent = new StringBuilder();

            using (var fileText = File.OpenText(filePath))
            {
                while (!fileText.EndOfStream)
                {
                    var line = fileText.ReadLine()?.Trim();

                    // continuously skip the line if header matches.
                    if (line.StartsWith(headerToSkip))
                    {
                        continue;
                    }

                    //Else add it to the content.
                    sbContent.AppendLine(line);
                }
            }

            return sbContent.ToString();
        }
    }

        return sbContent.ToString();
    }
}


Subject: Project Development Timeline

Dear [Recipient's Name],

Please find below the updated project development timeline:

Phase	Dates
Analysis	March 26 - March 28
Development	April 1 - April 5
User Acceptance Testing (UAT)	May 8 - May 12
Release Date	April 19 (Fallback: April 25)
Let us know if you have any questions or need further details.

Best regards,
